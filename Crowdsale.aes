  contract Token =
    public entrypoint transfer : (address, int) => bool
    public entrypoint transfer_from : (address, address, int) => bool

  contract Crowdsale =
    
    record state = {
        wallet    : address,
        token     : Token }

    public entrypoint wallet() : address = state.wallet
    public entrypoint token() : Token = state.token

    public stateful entrypoint init(_wallet : address, _token : Token) = 
      { wallet = _wallet,
        token = _token }

    public stateful entrypoint buy(_tokens : int) = 
      preValidatePurchase'(Call.value)
      processPurchase'(Call.caller,_tokens)
      forwardFunds'()

    public stateful entrypoint buy2(buyer : address, _tokens : int) = 
      preValidatePurchase'(Call.value)
      processPurchase'(buyer,_tokens)
      forwardFunds'()

    private stateful function preValidatePurchase'(_amountAEONS : int) =
      require(_amountAEONS > 0, "Value is sub zero")

    private stateful function processPurchase'(_beneficiary : address,_tokenAmount : int) =
      deliverTokens'(_beneficiary, _tokenAmount)

    private stateful function deliverTokens'(_beneficiary : address,_tokenAmount : int) : bool =
      state.token.transfer(_beneficiary, _tokenAmount)
      
      true
    
    private stateful function forwardFunds'() : string =
      Chain.spend(state.wallet,Call.value)

      "Successful Transfer"



