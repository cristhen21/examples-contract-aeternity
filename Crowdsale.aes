contract Token =
  public function transfer : (address, int) => bool
  public function transfer_from : (address, address, int) => bool

contract Crowdsale =
  
  record state = {
      wallet    : address,
      token     : address }
  /*
  datatype event =
      TokenPurchase(indexed address, indexed address, indexed int, indexed amount)
  */
  
  public stateful function init(_wallet : address, _token : address) = 
    require(_wallet != #0)
    require(_token != #0)
    { wallet = _wallet,
      token = _token }

  public stateful function buyTokens(_tokens : int) = 
    _preValidatePurchase'(Call.caller, Call.value)
    _processPurchase'(Call.caller,_tokens)
    _forwardFunds'()

  private stateful function _preValidatePurchase'(_beneficiary : address,_amountETH : int) =
    require(_beneficiary != #0)
    require(_amountETH > 0)
  

  private stateful function _processPurchase'(_beneficiary : address,_tokenAmount : int) =
    _deliverTokens(_beneficiary, _tokenAmount)

  private stateful function _deliverTokens'(_beneficiary : address,_tokenAmount : int) =
    token.transfer(_beneficiary, _tokenAmount)
  
  private stateful function _forwardFunds() =
    wallet.transfer( Call.value)

    
